{
 "kind": "discovery#restDescription",
 "etag": "\"u_zXkMELIlX4ktyNbM2XKD4vK8E/7cr5yc2tLSpurihbJlq4b7FeVSk\"",
 "discoveryVersion": "v1",
 "id": "flicq:v3",
 "name": "flicq",
 "version": "v3",
 "description": "Flicq Backend Data managemenet API",
 "icons": {
  "x16": "http://www.google.com/images/icons/product/search-16.gif",
  "x32": "http://www.google.com/images/icons/product/search-32.gif"
 },
 "protocol": "rest",
 "baseUrl": "https://united-creek-911.appspot.com/_ah/api/flicq/v3/",
 "basePath": "/_ah/api/flicq/v3/",
 "rootUrl": "https://united-creek-911.appspot.com/_ah/api/",
 "servicePath": "flicq/v3/",
 "batchPath": "batch",
 "parameters": {
  "alt": {
   "type": "string",
   "description": "Data format for the response.",
   "default": "json",
   "enum": [
    "json"
   ],
   "enumDescriptions": [
    "Responses with Content-Type of application/json"
   ],
   "location": "query"
  },
  "fields": {
   "type": "string",
   "description": "Selector specifying which fields to include in a partial response.",
   "location": "query"
  },
  "key": {
   "type": "string",
   "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
   "location": "query"
  },
  "oauth_token": {
   "type": "string",
   "description": "OAuth 2.0 token for the current user.",
   "location": "query"
  },
  "prettyPrint": {
   "type": "boolean",
   "description": "Returns response with indentations and line breaks.",
   "default": "true",
   "location": "query"
  },
  "quotaUser": {
   "type": "string",
   "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
   "location": "query"
  },
  "userIp": {
   "type": "string",
   "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
   "location": "query"
  }
 },
 "schemas": {
  "Shot": {
   "id": "Shot",
   "type": "object",
   "properties": {
    "aX": {
     "type": "string"
    },
    "aY": {
     "type": "string"
    },
    "aZ": {
     "type": "string"
    },
    "counter": {
     "type": "string"
    },
    "id": {
     "type": "string"
    },
    "q0": {
     "type": "string"
    },
    "q1": {
     "type": "string"
    },
    "q2": {
     "type": "string"
    },
    "q3": {
     "type": "string"
    }
   }
  },
  "Shots": {
   "id": "Shots",
   "type": "object",
   "properties": {
    "items": {
     "type": "array",
     "items": {
      "$ref": "Shot"
     }
    }
   }
  }
 },
 "resources": {
  "FlicqEndpointService": {
   "resources": {
    "Shots": {
     "methods": {
      "Add": {
       "id": "flicq.FlicqEndpointService.Shots.Add",
       "path": "shots",
       "httpMethod": "PUT",
       "description": "Add a shot",
       "request": {
        "$ref": "Shot",
        "parameterName": "resource"
       }
      },
      "Create": {
       "id": "flicq.FlicqEndpointService.Shots.Create",
       "path": "shots",
       "httpMethod": "POST",
       "description": "Create a shot info with random data"
      },
      "List": {
       "id": "flicq.FlicqEndpointService.Shots.List",
       "path": "shots",
       "httpMethod": "GET",
       "description": "List all the shots",
       "parameters": {
        "limit": {
         "type": "integer",
         "default": "10",
         "format": "int32",
         "location": "query"
        }
       },
       "response": {
        "$ref": "Shots"
       }
      }
     }
    }
   }
  }
 }
}
